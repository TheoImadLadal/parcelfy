name: ✍ Unit tests.

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "README.md"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.5.0
      - name: set release date
        run: |
          echo "BUILD_VERSION=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: "7.0.x"

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Install Required Tools
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-reportgenerator-globaltool
          dotnet tool install dotnet-coverage
          
      # Add coverlet.collector nuget package to test project - 'dotnet add <TestProject.cspoj> package coverlet
      - name: Test
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
      
      - name: Copy Coverage to Predictable Location
        run: cp coverage/*/coverage.cobertura.xml coverage/coverage.cobertura.xml

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/coverage.cobertura.xml
          badge: true
          format: 'markdown'
          output: 'both'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
